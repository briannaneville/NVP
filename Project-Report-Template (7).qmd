---
title: "NVP Report"
author: 'Brianna Neville, Curiosity Steen, Hye Jin Park, Michael Basanese'
date: '`r Sys.Date()`'
format: pdf
---

```{r}
#| echo: false
#| include: false
#| label: front-matter
#| warning: false
# clean up & set default chunk options
rm(list = ls())
knitr::opts_chunk$set(echo = FALSE)

# packages
library(readxl)
library(tidyverse)
library(dplyr)
library(ggplot2)
library(ggthemes)
library(lme4)
library(emmeans)
library(knitr)
library(mosaic)
library(ggformula)
library(car)
library(tinytex)
library(broom)
library(kableExtra)

# read in data 

# use this space to do any data processing you need

# load data
foam_raw <- read_excel("Foster_Mines_Capstone_Data_v2.xlsx", sheet = "Sheet1")

# decompose SampleCode
foam_data <- foam_raw %>%
  separate(SampleCode, into = c("prefix", "Chemical_Index", "Porosity", 
                                "Sample_ID"), sep = "_", remove = FALSE) %>%
  select(-prefix)

cyc_cols <- grep("^Cyc_", names(foam_data), value = TRUE)
e1_cols <- grep("^E1_MPA_Cyc_", names(foam_data), value = TRUE)
td_cols <- grep("^tandelta_Cyc_", names(foam_data), value = TRUE)
es_cols <- grep("^Estatic_MPA_Cyc_", names(foam_data), value = TRUE)
nvp_cols <- grep("^NVP_Cyc_", names(foam_data), value = TRUE)

meta_cols <- setdiff(names(foam_data), c(cyc_cols, e1_cols, td_cols, es_cols, 
                                         nvp_cols))

# pivot data
cyc_long <- foam_data %>%
  select(SampleCode, all_of(cyc_cols)) %>%
  pivot_longer(cols = all_of(cyc_cols),
               names_to = "Cycle_Label",
               values_to = "Cycle_Count")

# E1
e1_long <- foam_data %>%
  select(SampleCode, all_of(e1_cols)) %>%
  pivot_longer(cols = all_of(e1_cols),
               names_to = "Cycle_Label",
               values_to = "E1_MPA") %>%
  mutate(Cycle_Label = str_replace(Cycle_Label, "E1_MPA_", ""))

# tandelta
td_long <- foam_data %>%
  select(SampleCode, all_of(td_cols)) %>%
  pivot_longer(cols = all_of(td_cols),
               names_to = "Cycle_Label",
               values_to = "tan_delta") %>%
  mutate(Cycle_Label = str_replace(Cycle_Label, "tandelta_", ""))

# Estatic
es_long <- foam_data %>%
  select(SampleCode, all_of(es_cols)) %>%
  pivot_longer(cols = all_of(es_cols),
               names_to = "Cycle_Label",
               values_to = "Estatic_MPA") %>%
  mutate(Cycle_Label = str_replace(Cycle_Label, "Estatic_MPA_", ""))

# NVP
nvp_long <- foam_data %>%
  select(SampleCode, all_of(nvp_cols)) %>%
  pivot_longer(cols = all_of(nvp_cols),
               names_to = "Cycle_Label",
               values_to = "NVP") %>%
  mutate(Cycle_Label = str_replace(Cycle_Label, "NVP_", ""))

# merge everything
long_data <- cyc_long %>%
  left_join(e1_long, by = c("SampleCode", "Cycle_Label")) %>%
  left_join(td_long, by = c("SampleCode", "Cycle_Label")) %>%
  left_join(es_long, by = c("SampleCode", "Cycle_Label")) %>%
  left_join(nvp_long, by = c("SampleCode", "Cycle_Label"))

# join with meta data
foam_data <- foam_data %>%
  select(all_of(meta_cols)) %>%
  right_join(long_data, by = "SampleCode") %>%
  mutate(
    Chemical_Index = as.numeric(Chemical_Index),
    Porosity = as.numeric(Porosity),
    Sample_ID = as.numeric(Sample_ID),
    Cycle = str_extract(Cycle_Label, "[A-N]$")
  ) %>%
  select(SampleCode, Chemical_Index, Porosity, Sample_ID,
       Cycle, Cycle_Count,
       strain, Stress_kPa, Relporo, freq, amp,
       E1_MPA, tan_delta, Estatic_MPA, NVP)

foam_data <- foam_data %>%
  drop_na()

foam_data <- foam_data %>%
  rename(
    Strain = strain,
    Stress = Stress_kPa,
    Freq = freq,
    Amp = amp,
    Dyn_Stiff = E1_MPA,
    Stat_Stiff = Estatic_MPA,
    Damping = tan_delta
  )

# create new normalized response variable
foam_data <- foam_data %>%
  group_by(SampleCode) %>%
  mutate(
    NVP_Initial = first(NVP[Cycle_Count == min(Cycle_Count, na.rm = TRUE)]),
    NVP_Relative = NVP / NVP_Initial
  ) %>%
  ungroup()

foam_data <- foam_data %>%
  filter(Cycle_Count <= 10000, 
         Damping >= 0,
         !(Sample_ID == 133 & NVP > 0.1)
         )

foam_data <- foam_data %>%
  mutate(Log_Cycle = ifelse(Cycle_Count == 0, 0, log(Cycle_Count)))

```


## 1. Project Description

Navy helmets must provide long-term protection across extreme temperatures. The current foam in the helmets fails under cold weather conditions, so the NNSA has commissioned researchers to test alternatives. Navy personnel receive one helmet for their entire career in the military. After basic training, the helmet receives a lot of impact and shocks, which degrades the material and reduces its ability to protect under stress. The glass transition temperature for the current foam is 10℃ at which the foam becomes stiff and hard. At lower temperatures, the helmets are not able to withstand substantial impact and give needed protection. A foam needs to be created that is stable across temperatures and can withstand impact over several years. 

Dr. Moira Foster researched six types of foams for their short term and long term effects over time. Similar to memory foam, the material exhibits time-dependent recovery after deformation. She used a 2 X 3 factorial design to observe six different foams. There are three different chemical compounds of foams - 79, 100, 121.  The 79 foam is the most stiff, and 121 is the least stiff of the foams. There are two densities of foam - high porosity (71% air) and low porosity (81% air). Dr. Foster was interested to see how the chemical composition and porosity affect the foam.

```{r, echo=FALSE}
library(knitr)
chemical_index <- c(79, 79, 100, 100, 121, 121)
porosity <- c(71, 81, 71, 81, 71, 81)

my_matrix <- as.matrix(cbind(chemical_index, porosity))

kable(my_matrix, caption = "Table of Foam")
```

Dr. Foster used a hydraulic machine to squish the foam and collect data. Because of the physical constraints of the foam, she picked the stress, strain, frequency, and amplitude the machine would run. The foam was initially pressed for 120 seconds to reach a certain relative porosity, and then the machine ran sinusoidally over time. At certain cycle counts data was collected on damping, dynamic elasticity, static elasticity, and non-linear viscous parameter (NVP). 

Our group was tasked with analyzing NVP, which quantifies the time-dependent, non-recoverable deformation of a material under cyclic stress. Many materials that have deformations display linear viscoelastic behavior. The theory of linear viscosity states that there is a mathematical relationship between stress, strain, and time in regards to degradation of the material. The theory for linear viscosity does not include a wide range of temperatures, stresses, and strains because nonlinear viscosity is observed at extremes. Ultimately, NVP is measuring how the foam responds to stress over time and how the material degrades. Higher NVP is associated with faster material degradation.


## 1.1 Research Questions

**Overarching Research Question:** How does stiffness, damping, and nonlinearity change over time and how can we predict this change?  

**For us: **  Which factors in the data are linked to variations in non-linearity?

## 1.2 Variables

The response variable we are investigating is non-linear viscous parameter. The predictors we used in our model are listed below.

```{r}
#| label: tbl-variables
#| echo: false
#| tbl-cap: "Summary of Variables Used in Analysis"
#| tbl-pos: "H"
variable.desc <- data.frame(Name = c("Cycle", "Frequency", "Amplitude", "Chemical Index", "Porosity"))
variable.desc$Type <- c("Categorical", "Numerical", "Numerical","Categorical","Categorical")
variable.desc$Notes <- c("Count at which data is taken", "The times the foam is squished over a time period", "The height of a squish", "The type of foam used (79, 100, 121", "High (71%), Low (81%)")
knitr::kable(variable.desc, format = "latex", booktabs = TRUE,
             col.names = c("Name", "Type", "Notes"),
             longtable = FALSE) %>%
  kable_styling( full_width = FALSE) %>%
  column_spec(3, width = "8cm") %>% 
  add_header_above(c(" " = 3))
```

#  2. Exploratory Data Analysis (EDA)
<!--
*Description of important variables.*
- *summary statistics*
- *missing Data*
- *unusual or concerning observations*

*Relevant summary figures that provide intuition for the research questions and/or inform important modeling decisions (correlation structure, etc).*

*Describe important outcomes of the EDA that the reader should notice.*
-->

First, we analyzed NVP values across the different samples. We noticed that some foam samples were squished more than others. Not many foam samples were squished more than 10,000 times, so we decided to remove data when the cycle count rose above 10,000. Also, we found three foam samples that had substantial spikes in NVP that deviated from their overall pattern over cycle count. We believe these NVP measurements may not be accurate, so we removed these unusual values while keeping the rest of the data for these samples. @fig-samples shows the NVP values over cycle count for a few samples, after removing high cycle counts and spikes in NVP. 

```{r}
#| label: fig-samples
#| echo: false
#| fig-cap: "Plot of NVP values for a few selected samples over the number of times the foam sample was squished."
#| fig-pos: "H"
#| fig-align: "center"

some_samples <- foam_data |> 
  filter(Sample_ID %in% c(100, 103, 104, 105, 106, 166, 150, 149))
ggplot(data = some_samples, aes(x = Cycle_Count, y = NVP, group = Sample_ID,
                     color = as.factor(Sample_ID))) +
  geom_line() + geom_point() + # Lines for each subject
  labs(title = "Plot of a few samples by cycle count", 
       x = "Number of Squishes", y = "NVP", color = "ID")
```

Based on @fig-samples, we see that NVP seems to follow a slight increasing trend over cycle count, with higher increases at low cycle counts. Also, we notice that three samples start with a substantially higher NVP than the other samples. These are the only three samples in the entire data set that start with such high NVP values. However, the trend in NVP values over time does not appear to be much different for these samples, so we decided not to omit them. In addition, we see that the values of NVP are very small with respect to the cycle counts. Because of this, we decided to model NVP over the logarithm of cycle count instead of the raw cycle count. By doing this, we ensure that the variables in our model are on more similar scales. 

Next, we analyzed the potential effects of different variables on NVP. Based on @fig-porosity-chemical, NVP tends to be higher for foam samples with a porosity of 81%. Also, chemicals 100 and 121 tend to have a higher average NVP.

```{r}
#| label: fig-porosity-chemical
#| echo: false
#| fig-cap: "Boxplots of average NVP by porosity and chemical index"
#| fig-pos: "H"
#| fig-align: "center"


# Create a level 2 data frame for analysis of level 2 variables
final_l2 <- foam_data |> group_by(Sample_ID) |>
  summarise(Mean_NVP = mean(NVP),
            Max_NVP = max(NVP), max_NVP_diff = max(diff(NVP)),
            across(c(Chemical_Index, Porosity, Strain, Stress, 
                     Relporo, Freq, Amp), first)) |> ungroup()
# NVP vs. Porosity and Chemical Index
final_l2 |> ggplot(aes(x = as.factor(Porosity), y = Mean_NVP, 
                       fill = as.factor(Porosity))) +
  geom_boxplot(outliers = F) + scale_fill_colorblind() +
  labs(title = "Average NVP by Chemical Index and Porosity",
       fill = "Porosity", x = "Porosity", y = "Average NVP") +
  facet_wrap(vars(Chemical_Index)) +
  geom_point(position = position_jitter(width = 0.25), 
             color = "darkgray", cex = 1)

```

Next, we analyzed average NVP by frequency and amplitude. Based on @fig-freq-amp, average NVP tends to be higher at higher frequencies and amplitudes. 

```{r}
#| label: fig-freq-amp
#| layout-ncol: 2
#| fig-cap: "Average NVP by frequency and amplitude"
#| fig-subcap:
#|  - "Frequency"
#|  - "Amplitude"
#| fig-pos: "H"

final_l2 |> ggplot(aes(x = Freq, y = Mean_NVP)) + geom_point() +
  labs(title = "Average NVP by Frequency", x = "Frequency", 
       y = "Average NVP")
final_l2 |> ggplot(aes(x = Amp, y = Mean_NVP)) + geom_point() +
  labs(title = "Average NVP by Amplitude", x = "Amplitude", 
       y = "Average NVP")
```

## Deeper EDA

To analyze this data further, we fit linear models of NVP by the logarithm of cycle count for each sample. We then observe the effects of different variables on the slopes. @fig-chemical-slope shows the effect of chemical index on the slopes. 

```{r}
#| label: fig-chemical-slope
#| echo: false
#| fig-cap: "Boxplots of slopes of NVP over logarithm of cycle count by chemical index, outlier slopes not shown"
#| fig-pos: "H"
#| fig-align: "center"
#| fig-width: 6

# Do EDA with slopes and intercepts
# Fit a model for each group
models <- foam_data %>%
  group_by(Sample_ID) %>%
  nest() %>%
  mutate(model = map(data, ~lm(NVP ~ Log_Cycle, data = .x)))

# Add model summaries
models <- models %>%
  mutate(
    summary = map(model, summary),
    coef = map(model, ~coef(.x)))

# Get a data frame of the coefficients
tidy_models <- models %>%
  mutate(tidy = map(model, tidy)) %>%
  unnest(tidy)

# Change the data frame from long to wide
tidy_models <- tidy_models |>
  pivot_wider(names_from = term, 
              values_from = c(estimate, std.error, statistic, p.value))
tidy_to_add <- tidy_models |> select(-c(data, model, summary, coef))
colnames(tidy_to_add) <- c("Sample_ID", "Intercept", "Slope", 
                           "SE_Intercept", "SE_Slope",
                           "tStatIntercept", "tStatSlope", "pValIntercept",
                           "pValSlope")

# Merge with the level 2 data set
final_l2 <- full_join(final_l2, tidy_to_add, by = "Sample_ID")

# Plot the slopes by chemical code
final_l2 |> ggplot(aes(x = as.factor(Chemical_Index), y = Slope, 
                       fill = as.factor(Chemical_Index))) +
  geom_boxplot(outliers = F) + scale_fill_colorblind() +
  labs(title = "Slope of NVP over Log(Cycle) by Chemical Index",
       fill = "Chemical Index", x = "Chemical Index", y = "Slope")
```

In @fig-chemical-slope, we see that there are some differences between the chemicals in terms of slopes. Outlier slopes are omitted so that we can see these differences more clearly. Specifically, the slopes tend to be higher for chemical index 121 than for index 79. Thus, we may need to account for the effect of chemical index on slope in our model.

# 3. Statistical Analysis 

```{r, echo=FALSE}
#| label: model-code
foam_model <- lmer(NVP ~ Log_Cycle + Freq + Amp +
                     as.factor(Chemical_Index) + as.factor(Porosity) + 
                     Log_Cycle:as.factor(Chemical_Index) +
                     (1 + Log_Cycle | Sample_ID), data = foam_data)
```


To investigate the factors affecting the nonlinear viscoelastic parameter (NVP) of helmet foams, we used a **linear mixed effects model**. This approach allowed us to account for the repeated measurements collected from the same foam samples over time. The model selection was finalized by conducting a likelihood ratio tests comparing models with and without different interaction terms, and the final model was selected based on significant improvement in fit and overall simplicity.

The model has **fixed effects** for the logarithm of cycle count, frequency, amplitude, chemical index, porosity, and an interaction between log(cycle) and chemical index. The **random effects** for foam sample ID allows both the baseline NVP and the effect of cycling to vary between samples.

The model equation is:

$$
\begin{aligned}
\text{NVP}_{ij} =\ & a_i + b_i (\log(\text{Cycle\_Count}_{ij})) + \epsilon_{ij}
\end{aligned}
$$

$$
\begin{aligned}
a_i = \alpha_0 & + \alpha_1 (\text{Freq}_{ij}) \\
& + \alpha_2 (\text{Amp}_{ij}) \\
& + \alpha_3 I(\text{Chemical\_Index}_{ij} = 100) \\
& + \alpha_4 I(\text{Chemical\_Index}_{ij} = 121) \\
&  + \alpha_5 I(\text{Porosity}_{ij} = 81) \\
& + u_i
\end{aligned}
$$

$$
\begin{aligned}
b_i = \beta_0 & + \beta_1 I(\text{Chemical\_Index}_{ij} = 100) \\
& + \beta_2 I(\text{Chemical\_Index}_{ij} = 121) \\
& + v_i
\end{aligned}
$$

where:

- $i$ indexes the foam sample and $j$ indexes the observation within a sample
- $a_{i}$ and $b_{i}$ are the intercept and slope for foam sample i
- $\alpha_{0}$ and $\beta_{0}$ are the global intercept and slope when the chemical index is 79, the porosity is 71%, and the frequency and amplitude are zero. In this case, the global intercept represents the initial NVP and the global slope represents the change in NVP as the logarithm of the cycle count increases by one.
- $\alpha_{1}$ through $\alpha_{5}$ represent the effects of frequency, amplitude, chemical type, and porosity on initial NVP.
- $\beta_1$ and $\beta_2$ represent the effect of different chemical types compared to the baseline of 79 on the rate of change of NVP over cycle count. 
- $\epsilon_{ij} \sim N(0, \sigma_\varepsilon^2)$. The parameter $\sigma_\varepsilon^2$ represents the observation-to-observation variability within each sample.
- $u_i$ and $v_i$ are the random intercept and slope. They allow each foam sample to have its own slope and intercept. They follow this distribution:
$$
\left( \begin{array}{c} u_i \\ v_i \end{array} \right) \sim N \left( \left(\begin{array}{c} 0 \\ 0 \end{array} \right), \left(\begin{array}{cc} \sigma_u^2 & \rho_{uv}\sigma_u\sigma_v \\ \rho_{uv}\sigma_u\sigma_v & \sigma_v^2 \end{array} \right) \right)
$$
- $\sigma_u^2$ represents the sample-to-sample variability in the initial NVP
- $\sigma_v^2$ represents the sample-to-sample variability in the rate of change in NVP with respect to the logarithm of cycle count
- $\rho_{uv}$ represents the correlation between the initial NVP and the rate of change in NVP with respect to the log of cycle count for each sample


### Key Results

The model coefficients are summarized in the table below.

```{r, echo=FALSE}
#| label: tbl-fixed-effects
#| tbl-cap: "Fixed Effect Estimates and t-values for NVP Model"

foam_model_table <- data.frame(
  Term = c("(Intercept)", "Log(Cycle)", "Frequency", "Amplitude", 
           "Chemical Index = 100", "Chemical Index = 121", "Porosity = 81%", 
           "Log(Cycle) × Chemical Index=100", "Log(Cycle) × Chemical Index=121"),
  Estimate = c(0.00823, 0.00030, 0.00121, 1.40689, 0.00636, 0.02025, 0.02384, 
               0.00104, 0.00066),
  Std_Error = c(0.00567, 0.00021, 0.00036, 0.15047, 0.00590, 0.00468, 0.00429, 
                0.00038, 0.00030),
  t_value = c(1.452, 1.442, 3.334, 9.350, 1.078, 4.322, 5.560, 2.734, 2.183)
)

kable(foam_model_table, digits = 3)
```

Variables with t-values greater than the absolute value of 2 are considered statistically significant.

Also, we find that $\hat{\sigma}_u^2 = 3.068e-4$, $\hat{\sigma}_v^2 = 1.222e-6$, $\hat{\sigma}_\varepsilon^2 = 6.852e-6$, and $\rho_{uv} = 0.22$. Since $\hat{\sigma}_u^2$ is much greater than $\hat{\sigma}_v^2$ and $\hat{\sigma}_\varepsilon^2$, most variability in NVP can be attributed to differences in initial NVP between samples. Also, since $\rho_{uv}$ is somewhat small, there is not much correlation between initial NVP and cycle-over-cycle change in NVP.

### Interpretation of Results

We first discuss the meanings of each coefficient estimate:

- Intercept: The expected initial NVP for a sample with chemical index 79, initial porosity of 71%, and a frequency and amplitude of 0 is 0.00823.
- Log(Cycle): Samples with chemical index 79 have an estimated average rate of change in NVP of 0.00030 units per increase of one in log(Cycle), after accounting for porosity, frequency, and amplitude.
- Frequency: Holding amplitude, chemical index, and initial porosity constant, as frequency increases by one, the expected initial NVP increases by 0.00121.
- Amplitude: Holding frequency, chemical index, and initial porosity constant, as amplitude increases by one, the expected initial NVP increases by 1.40689.
- Chemical Index = 100: Holding frequency, amplitude, and initial porosity constant, expected initial NVP is 0.00636 units greater for samples with chemical index 100 than for samples with chemical index 79.
- Chemical Index = 121: Holding frequency, amplitude, and initial porosity constant, expected initial NVP is 0.02025 units greater for samples with chemical index 121 than for samples with chemical index 79.
- Porosity = 81%: Holding frequency, amplitude, and chemical index constant, expected initial NVP is 0.02384 units greater for samples with an initial porosity of 81% than for samples with an initial porosity of 71%.
- Log(Cycle) × Chemical Index=100: The estimated average rate of change in NVP per increase of one in log(Cycle) is 0.00104 units higher for samples with chemical index 100 than for samples with chemical index 79, after accounting for porosity, frequency, and amplitude.
- Log(Cycle) × Chemical Index=121: The estimated average rate of change in NVP per increase of one in log(Cycle) is 0.00066 units higher for samples with chemical index 121 than for samples with chemical index 79, after accounting for porosity, frequency, and amplitude.

We come away with the following conclusions for the effects of the variables in the model on NVP:

- **Amplitude**: Foams tested at larger amplitudes had higher NVP values, indicating more non-recoverable deformation under greater compression.
- **Frequency**: Higher frequencies led to slightly higher NVP values, indicating that faster degradation when the foam is subjected to faster cycling.
- **Porosity**: Foams with 81% porosity showed significantly higher NVP than those with 71% porosity, meaning they degrade more quickly under repeated stress.
- **Chemical Index**: Foams with chemical index 121 had the highest baseline NVP and faster increases over time, indicating a higher rate of degradation compared to foams with chemical index 79.
- **Interaction**: The rate at which NVP changed with cycling depended on the foam’s chemical index. Foams with higher chemical indices tended to maintain higher NVP levels over more cycles.

@fig-model-predictions shows model predictions by cycle count for a group of simulated samples with a chosen frequency and amplitude and different combinations of chemical index and porosity. According to our model, foam samples with 81% porosity have higher predicted NVP. Also, foams with chemical index 121 show the highest predicted NVP, while foams with chemical index 79 show the lowest predicted NVP. Also, the predicted rate of increase in NVP for foams with chemical index 79 is lower than the rates of increase for foams with chemical indices 100 and 121. 

```{r}
#| label: fig-model-predictions
#| echo: false
#| fig-cap: "Model predictions at a frequency of 15 and an amplitude of 0.024, for simulated samples with different combinations of chemical index and porosity."
#| fig-pos: "H"
#| fig-align: "center"
#| fig-width: 7
#| fig-height: 4

# Fit the model at a fixed frequency and amplitude for each chemical index

# Generate the data
Cycle_Count <- rep(c(0, seq(from = 2000, to = 10000, by = 1000)), 6)
Freq <- rep(15, 60)
Amp <- rep(round(median(foam_data$Amp), 3), 60)
Porosity <- c(rep(71, 30), rep(81, 30))
Chemical_Index <- c(rep(79, 10), rep(100, 10), rep(121, 10),
                    rep(79, 10), rep(100, 10), rep(121, 10))
Sample_ID <- c(rep(200, 10), rep(201, 10), rep(202, 10), rep(203, 10),
               rep(204, 10), rep(205, 10))
newdata <- as.data.frame(cbind(Cycle_Count, Freq, Amp, Porosity, 
                               Chemical_Index, Sample_ID))
newdata <- newdata %>%
  mutate(Log_Cycle = ifelse(Cycle_Count == 0, 0, log(Cycle_Count)))

# Get model predictions for each simulated sample
NVP_pred <- predict(foam_model, newdata, allow.new.levels = T)
data_to_plot <- cbind(newdata, NVP_pred)

# Plot the predictions over cycle count (number of squishes)
ggplot(data = data_to_plot, aes(x = Cycle_Count, y = NVP_pred, 
                     color = as.factor(Chemical_Index))) +
  geom_line() + geom_point() + # Lines for each subject
  labs(title = 
         "Model Predictions over Cycle Count at a Set Frequency and Amplitude", 
       x = "Number of Squishes", y = "NVP", 
       subtitle = "Frequency = 15, Amplitude = 0.024",
       color = "Chemical Index") +
  facet_grid(. ~ as.factor(Porosity) )
```

In our model, we assume linearity and normality of residuals and random effects. The model assumptions were reasonably met and the diagnostic plots can be found in the Appendix.

# 4. Recommendations 

If long-term durability is the goal, we recommend selecting foams with **lower NVP values**, as higher NVP is associated with faster degradation under repeated stress. Our analysis showed that foams with **chemical index 121** and **81% porosity** exhibited higher NVP, indicating more non-recoverable deformation over time. On the other hand, foams with **chemical index 79** and **71% porosity** maintained lower NVP values and degraded slower across cycles. Since **higher frequencies and larger amplitudes** led to increased NVP, testing protocols should use realistic levels of stress to accurately assess foam performance. Additionally, the chemical composition plays a key role in how quickly degradation occurs over time and should be considered when selecting materials for helmet design.

# 5. Resources 

Information on mixed models: “Beyond Multiple Linear Regression: Applied Generalized Linear Models and Multilevel Models in R” by Paul Roback and Julie Legler

Information on non-linear viscoelasticity: *"Creep and fatigue of natural fibre composites"* by M. Misra, S.S. Ahankari, and A.K. Mohanty. [Link to article](https://www.sciencedirect.com/science/article/abs/pii/B9781845697426500113)


# 6. Additional Considerations

While this analysis provides valuable insights into the degradation behavior of helmet foam materials, several limitations and considerations should be noted:

- **Generalizability:** The findings are limited to the specific combinations of Chemical Index and Porosity that were in this dataset. Additional combinations or a broader chemical spectrum could reveal new patterns or interaction effects not captured here.
- **Sample Size and Balance:** Although there were repeated measurements per sample, the number of unique sample IDs per group varied. Some interaction combinations were underrepresented, potentially affecting the precision and stability of those fixed effect estimates.
- **Measurement Variability:** Small standard deviations in the random effects suggest that most of the variation in NVP occurs at the fixed-effect level. However, residual noise remains and may reflect unmeasured factors such as ambient temperature or differing machine calibrations during testing.

These limitations should be considered when interpreting the results or extending the model to new material types or testing conditions.
  
\newpage
# Technical Appendix  

**Mixed Effects Model Diagnostic Plots**

```{r}
#| label: fig-diagnostics
#| layout-ncol: 2
#| fig-cap: "Diagnostic plots for the Helmet Foam model"
#| fig-subcap:
#|  - "QQ Plot of Residuals"
#|  - "QQ Plot of Random Intercepts"
#|  - "QQ Plot of Random Slopes"
#|  - "Residuals vs Fitted Values"
#| fig-pos: "H"

# random intercepts
random_int_foam <- ranef(foam_model)$Sample_ID[,1]

# random slopes
random_slopes_foam <- ranef(foam_model)$Sample_ID[,2]

# fitted values and residuals
fitted_values <- fitted(foam_model)
residuals <- residuals(foam_model)

# residuals qq plot
qqnorm(residuals(foam_model), main = "Residuals QQ-Plot")
qqline(residuals(foam_model), col = "red")

# random intercepts effects qq plot
qqnorm(random_int_foam, main = "Random Intercepts QQ-Plot")
qqline(random_int_foam, col = "red")

# random slopes effects qq plot
qqnorm(random_slopes_foam, main = "Random Slopes QQ-Plot")
qqline(random_slopes_foam, col = "red")

# residuals vs. fitted plot
plot(fitted_values, residuals, 
     xlab = "Fitted Values", 
     ylab = "Residuals", 
     main = "Residuals vs. Fitted Values")
abline(h = 0, col = "red", lty = 2)

```

**Random Effects**

```{r}
#| label: tbl-random-effects
#| tbl-cap: "Random Effect Variance and Correlation Estimates for Helmet Foam Model"

random_effects_table <- data.frame(
  Group = c("Sample_ID", "Sample_ID", "Residual"),
  Effect = c("Intercept", "Log(Cycle)", "—"),
  Variance = c(3.068e-04, 1.222e-06, 6.852e-06),
  Std_Dev = c(0.01752, 0.00111, 0.00262),
  Correlation = c(NA, 0.22, NA)
)

kable(random_effects_table, digits = 5)
```


### R Script
```{r ref.label=c('front-matter', 'fig-samples', 'fig-porosity-chemical', 'fig-freq-amp', 'fig-chemical-slope', 'model-code', 'tbl-fixed-effects', 'tbl-random-effects', 'fig-model-predictions', 'fig-diagnostics')}
#| echo: true
#| eval: false

# Reprinted code chunks used previously for analysis
```
